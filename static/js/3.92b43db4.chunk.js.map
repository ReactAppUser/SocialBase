{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/maxresdefault.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileConteiner.jsx"],"names":["module","exports","descriptionBlock","__webpack_require__","p","postsBlock","posts","item","ProfileStatus","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","picture","className","s","photos","large","ProfileInfo_ProfileStatusWithHooks","preloader","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","React","memo","console","log","postsElements","map","Post_Post","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","withRouter","Component","componentDidMount","this","match","params","history","push","render","Profile_Profile","assign"],"mappings":"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","file":"static/js/3.92b43db4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2JPAL\"};","module.exports = __webpack_public_path__ + \"static/media/maxresdefault.bfcb8c23.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__c2Zum\",\"posts\":\"MyPosts_posts__1rppQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3hIzE\"};","import React from 'react';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n  \r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n               \r\n\r\n    }\r\n\r\n    activateEditMode = () => {  \r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n              \r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n            this.setState({\r\n            editMode: false,\r\n        });\r\n\r\n        this.props.updateStatus(this.state.status);\r\n         }\r\n\r\n    onStatusChange = (event) => {\r\n\r\n       this.setState({status: event.currentTarget.value,}) \r\n\r\n\r\n    }\r\ncomponentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps.status !== this.props.status){\r\n    \r\n    this.setState({ });\r\n    \r\n    \r\n}\r\n}\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \" I don't have status! Write me status my friend!\"}</span>\r\n\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange ={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   \r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( ()=>{\r\n     \r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n   \r\nconst activateEditMode = () => {\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n};\r\n\r\nconst onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value) \r\n }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \" I don't have status! Write me status my friend!\"} </span>\r\n\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input  onChange = {onStatusChange} autoFocus={true} onBlur={deactivateEditMode}  value={status} />  \r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport picture from '../../../assets/images/maxresdefault.jpg' \r\nimport Preloader from '../../common/Preloader/preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={picture}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://images.pexels.com/photos/733872/pexels-photo-733872.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, {Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formsControls/formsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nfunction AddNewPostForm(props) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field name=\"newPostText\" component={Textarea} placeholder={\"Input to me\"} validate={[required, maxLength10 ]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {       \r\n\r\n    console.log(\"RENDER\");\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n   \r\n   \r\n    let onAddPost = (values) => {\r\n        debugger; \r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}); \r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from '../Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../../../src/redux/profile-reducer' \r\nimport {withRouter} from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n       \r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            \r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n      this.props.getUserProfile(userId);\r\n       \r\n    this.props.getStatus(userId);\r\n  \r\n    \r\n               \r\n      };\r\n\r\n\r\n    render() {\r\n        // console.log('RENDER PROFILE')\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) =>  { \r\n    // console.log('mapStateToProps PROFILE')\r\n    return({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus }),\r\n    withRouter, \r\n  \r\n    )\r\n    (ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}