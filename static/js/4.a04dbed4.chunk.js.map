{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","MaxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","DialogItem_DialogItem","key","messagesElements","m","Message_Message","newMessageBody","isAuth","AddMessageForm_AddMessageForm","values","sendMessage","Redirect","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCWHC,MARKC,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,MAJEZ,GACNG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,mDCC5C,MAAMe,EAAcC,YAAiB,IAgBtBC,kBAAU,CAAEC,KAAM,4BAAlBD,CAdSf,GAGhBG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cAClBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcW,YAAY,qBAAqBb,KAAK,oBAEzGR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BC0BDoB,MAjCEzB,IAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMhC,QAAQmC,IAAIC,GAAK3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE5B,GAAIA,GAAI4B,EAAE5B,MACpF+B,EAAmBP,EAAM7B,SAASgC,IAAIK,GAAK/B,EAAAC,EAAAC,cAAC8B,EAAD,CAASrC,QAASoC,EAAEpC,QAASkC,IAAKE,EAAEhC,MAC9DwB,EAAMU,eAU3B,OAAKpC,EAAMqC,OAGPlC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACbiC,GAELzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAM4B,IAGV9B,EAAAC,EAAAC,cAACiC,EAAD,CAAgBrB,SAhBHsB,IACjBvC,EAAMwC,YAAYD,EAAOH,oBAIDjC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAU/B,GAAI,oCCF/BgC,sBACXC,YAhBmBjB,IACZ,CACHC,YAAaD,EAAMC,cAGDiB,IACf,CACHJ,YAAcJ,IACVQ,EAASC,YAAmBT,QASpCU,IAFWJ,CAGTjB","file":"static/js/4.a04dbed4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3kgs_\",\"dialogsItems\":\"Dialogs_dialogsItems__3wgvr\",\"active\":\"Dialogs_active__1oAh9\",\"messages\":\"Dialogs_messages__2jSXl\",\"message\":\"Dialogs_message__2o3kC\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\"\r\nimport { Textarea } from \"../../common/formsControls/formsControls\"\r\n\r\nconst MaxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, MaxLength50]} placeholder=\"Enter your message\" name=\"newMessageBody\"/>\r\n            </div>\r\n            <div>\r\n                <button>Sends</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogs-add-message-form\" })(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n            \r\n              \r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    if (!props.isAuth) { return <Redirect to={\"/login\"} /> };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n               \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n      }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs)\r\n"],"sourceRoot":""}